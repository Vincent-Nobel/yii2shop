<?php

namespace backend\models;

use Yii;
use yii\base\Model;
use yii\data\ActiveDataProvider;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "article".
 *
 * @property integer $id
 * @property string $name
 * @property string $intro
 * @property integer $article_category_id
 * @property integer $sort
 * @property integer $status
 * @property integer $create_time
 */
class Article extends \yii\db\ActiveRecord
{

    public static $modes=[
        -1=>'删除',0=>'隐藏',1=>'正常'
    ];
    /**
     * @return \yii\db\ActiveQuery
     */
    public function getArticleDetail()
    {
        //自身id=》分类id
        return $this->hasOne(ArticleDetail::className(),['article_id'=>'id']);
    }
    public function getArticleCategory()
    {
        return $this->hasOne(Article::className(),['id'=>'article_category_id']);
    }

    /**
     * @param bool $hider
     * @return array
     */
    public static function getStatus($hider=true){
        $optins=[
            -1=>'删除',0=>'隐藏',1=>'正常'
        ];
        if ($hider){
            unset($optins['-1']);
        }
        return $optins;
    }
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'article';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['intro'], 'string'],
            [['article_category_id', 'sort', 'status', 'create_time'], 'integer'],
            [['name'], 'string', 'max' => 50],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => '名称',
            'intro' => '简介',
            'article_category_id' => '文章分类id',
            'sort' => '排序',
            'status' => '状态',
            'create_time' => '创建时间',
        ];
    }
    public function scenarios()
    {
        return Model::scenarios(); // TODO: Change the autogenerated stub
    }
    //搜索
    public function search($params)
    {
        $query = Article::find();
        // $query->joinWith(['cate']);//关联文章类别表
        // $query->joinWith(['author' => function($query) { $query->from(['author' => 'users']); }]);

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'pagination' => [
                'pageSize' => 2,
            ],
        ]);
        // 从参数的数据中加载过滤条件，并验证
        $this->load($params);

        if (!$this->validate()) {
            // uncomment the following line if you do not want to any records when validation fails
            // $query->where('0=1');
            return $dataProvider;
        }

        // 增加过滤条件来调整查询对象
        $query->andFilterWhere([
            // 'cname' => $this->cate.cname,
            'title' => $this->title,
        ]);

        $query->andFilterWhere(['like', 'title', $this->title]);
        //$query->andFilterWhere(['like', 'cate.cname', $this->cname]) ;

        return $dataProvider;
    }
}
